{
	"info": {
		"_postman_id": "fintrak-api-collection",
		"name": "Fintrak API",
		"description": "Complete API collection for Fintrak financial tracking application including authentication, expense management, income tracking, categories, tags, counterparties, and product endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "fintrak"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/auth/register",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/auth/register",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"60d0fe4f5311236168a109ca\",\n  \"email\": \"{{user}}\"\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/auth/login",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login user and receive JWT token (automatically saved to environment)"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/auth/login",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"id\": \"60d0fe4f5311236168a109ca\",\n  \"email\": \"{{user}}\"\n}"
						}
					]
				}
			],
			"description": "User authentication endpoints for registration and login"
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "Get All Expenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						},
						"description": "Retrieve all expenses for the authenticated user"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"_id\": \"60d0fe4f5311236168a109cb\",\n    \"title\": \"Grocery Shopping\",\n    \"amount\": 85.50,\n    \"category\": {\n      \"id\": \"groceries\",\n      \"name\": \"Groceries\",\n      \"color\": \"#4CAF50\",\n      \"icon\": \"shopping-cart\"\n    },\n    \"payee\": {\n      \"id\": \"supermarket\",\n      \"name\": \"Local Supermarket\",\n      \"type\": \"company\"\n    },\n    \"date\": \"2024-01-15T00:00:00.000Z\",\n    \"description\": \"Weekly groceries\",\n    \"tags\": [\n      {\n        \"id\": \"weekly\",\n        \"name\": \"Weekly\",\n        \"color\": \"#2196F3\",\n        \"icon\": \"calendar\"\n      }\n    ],\n    \"userId\": \"60d0fe4f5311236168a109ca\",\n    \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n    \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get Expense by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Retrieve a specific expense by ID"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Create Expense",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"expense_id\", jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": {\n    \"id\": \"groceries\",\n    \"name\": \"Groceries\",\n    \"color\": \"#4CAF50\",\n    \"icon\": \"shopping-cart\"\n  },\n  \"payee\": {\n    \"id\": \"supermarket\",\n    \"name\": \"Local Supermarket\",\n    \"type\": \"company\"\n  },\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\",\n  \"tags\": [\n    {\n      \"id\": \"weekly\",\n      \"name\": \"Weekly\",\n      \"color\": \"#2196F3\",\n      \"icon\": \"calendar\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/expenses",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						},
						"description": "Create a new expense (automatically saves expense ID to environment)"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/expenses",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Update Expense",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"description\": \"Weekly groceries with extra items\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Update an existing expense"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"description\": \"Weekly groceries with extra items\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries with extra items\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:05:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Delete Expense",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Delete an existing expense"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Expense deleted successfully\"\n}"
						}
					]
				}
			],
			"description": "Complete CRUD operations for expense management"
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import Transactions from Excel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "",
									"description": "Excel file (.xlsx) containing transactions. Supports BBVA 'Últimos movimientos' format or standard format with columns: date, description, amount, currency (optional), type (optional), category (optional), periodicity (optional)"
								}
							]
						},
						"url": {
							"raw": "{{rootUrl}}/api/import/transactions",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"import",
								"transactions"
							]
						},
						"description": "Import transactions from Excel file. Automatically detects BBVA format or processes standard format. Negative amounts are treated as expenses, positive as income."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/transactions.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/transactions",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 40,\n  \"imported\": 40,\n  \"expenses\": 37,\n  \"income\": 3,\n  \"format\": \"BBVA\",\n  \"errors\": []\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/invalid.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/transactions",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 10,\n  \"imported\": 7,\n  \"expenses\": 5,\n  \"income\": 2,\n  \"format\": \"Standard\",\n  \"errors\": [\n    \"Row 3: Invalid date format\",\n    \"Row 7: Missing required fields (date, description, amount)\",\n    \"Row 10: Validation failed: amount must be a number\"\n  ]\n}"
						},
						{
							"name": "No File Uploaded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/transactions",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"transactions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"No file uploaded\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/transactions.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/transactions",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"transactions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"User not authenticated\"\n}"
						}
					]
				},
				{
					"name": "Import Categories from JSON",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "",
									"description": "JSON file containing categories. Expected format: [{\"key\": \"food_dining\", \"name\": \"Food & Dining\", \"color\": \"#FF6B35\", \"icon\": \"restaurant\", \"keywords\": [\"restaurant\", \"food\", \"dining\"]}]"
								}
							]
						},
						"url": {
							"raw": "{{rootUrl}}/api/import/categories",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"import",
								"categories"
							]
						},
						"description": "Import categories from JSON file. Categories with existing keys will be replaced. Supports keywords for automatic transaction categorization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/categories.json"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/categories",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 18,\n  \"imported\": 15,\n  \"updated\": 3,\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Import Tags from JSON",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "",
									"description": "JSON file containing tags. Expected format: [{\"key\": \"urgent\", \"name\": \"Urgent\", \"color\": \"#FF0000\", \"icon\": \"alert\"}]"
								}
							]
						},
						"url": {
							"raw": "{{rootUrl}}/api/import/tags",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"import",
								"tags"
							]
						},
						"description": "Import tags from JSON file. Tags with existing keys will be replaced. Useful for organizing and filtering transactions."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/tags.json"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/tags",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 18,\n  \"imported\": 16,\n  \"updated\": 2,\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Import Counterparties from JSON",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "",
									"description": "JSON file containing counterparties. Expected format: [{\"key\": \"amazon_es\", \"name\": \"Amazon España\", \"type\": {\"key\": \"company\", \"name\": \"Empresa\"}, \"email\": \"customerservice@amazon.es\", \"notes\": \"Tienda online\"}]"
								}
							]
						},
						"url": {
							"raw": "{{rootUrl}}/api/import/counterparties",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"import",
								"counterparties"
							]
						},
						"description": "Import counterparties from JSON file. Counterparties with existing keys will be replaced. Useful for managing payees and income sources."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/path/to/counterparties.json"
										}
									]
								},
								"url": {
									"raw": "{{rootUrl}}/api/import/counterparties",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"import",
										"counterparties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 32,\n  \"imported\": 30,\n  \"updated\": 2,\n  \"errors\": []\n}"
						}
					]
				}
			],
			"description": "Import data from external files. Supports Excel transactions (BBVA format), JSON categories with smart keywords, JSON tags, and JSON counterparties. All imports prevent duplicates by replacing existing items with same keys."
		},
		{
			"name": "Incomes",
			"item": [
				{
					"name": "Get All Incomes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/incomes",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"incomes"
							]
						},
						"description": "Retrieve all incomes for the authenticated user"
					}
				},
				{
					"name": "Create Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"income_id\", jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Freelance Project\",\n  \"amount\": 1500.00,\n  \"category\": {\n    \"id\": \"freelance\",\n    \"name\": \"Freelance Work\",\n    \"color\": \"#4CAF50\",\n    \"icon\": \"briefcase\"\n  },\n  \"source\": {\n    \"id\": \"client-abc\",\n    \"name\": \"ABC Company\",\n    \"type\": \"company\",\n    \"email\": \"projects@abc.com\"\n  },\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Web development project\",\n  \"tags\": [\n    {\n      \"id\": \"project\",\n      \"name\": \"Project Work\",\n      \"color\": \"#FF9800\",\n      \"icon\": \"code\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/incomes",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"incomes"
							]
						},
						"description": "Create a new income"
					}
				},
				{
					"name": "Update Income",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Freelance Project\",\n  \"amount\": 1750.00,\n  \"description\": \"Extended web development project\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/incomes/{{income_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"incomes",
								"{{income_id}}"
							]
						},
						"description": "Update an existing income"
					}
				},
				{
					"name": "Delete Income",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/incomes/{{income_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"incomes",
								"{{income_id}}"
							]
						},
						"description": "Delete an existing income"
					}
				}
			],
			"description": "Complete CRUD operations for income tracking"
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/categories",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Retrieve all categories for the authenticated user"
					}
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"category_id\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"groceries\",\n  \"name\": \"Groceries\",\n  \"color\": \"#4CAF50\",\n  \"icon\": \"shopping-cart\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/categories",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Create a new category"
					}
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Groceries\",\n  \"color\": \"#2196F3\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/categories/{{category_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						},
						"description": "Update an existing category"
					}
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/categories/{{category_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						},
						"description": "Delete an existing category"
					}
				}
			],
			"description": "Complete CRUD operations for category management"
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get All Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/tags",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"tags"
							]
						},
						"description": "Retrieve all tags for the authenticated user"
					}
				},
				{
					"name": "Create Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"tag_id\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"vacation\",\n  \"name\": \"Vacation\",\n  \"color\": \"#FF9800\",\n  \"icon\": \"plane\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/tags",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"tags"
							]
						},
						"description": "Create a new tag"
					}
				}
			],
			"description": "CRUD operations for tag management"
		},
		{
			"name": "Counterparties",
			"item": [
				{
					"name": "Get All Counterparties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/counterparties",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"counterparties"
							]
						},
						"description": "Retrieve all counterparties for the authenticated user"
					}
				},
				{
					"name": "Create Counterparty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"counterparty_id\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"amazon\",\n  \"name\": \"Amazon\",\n  \"type\": \"company\",\n  \"email\": \"support@amazon.com\",\n  \"notes\": \"Online shopping\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/counterparties",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"counterparties"
							]
						},
						"description": "Create a new counterparty"
					}
				}
			],
			"description": "CRUD operations for counterparty management (payees and income sources)"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get User Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/products",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Retrieve all financial products (deposits, cash accounts, indexed funds) for the authenticated user from the MI service"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/products",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deposits\": [\n    {\n      \"id\": \"dep_123\",\n      \"amount\": 10000,\n      \"currency\": \"EUR\",\n      \"interestRate\": 2.5,\n      \"maturityDate\": \"2025-12-31\"\n    }\n  ],\n  \"cashAccounts\": [\n    {\n      \"id\": \"acc_456\",\n      \"balance\": 5000,\n      \"currency\": \"EUR\",\n      \"accountType\": \"CHECKING\"\n    }\n  ],\n  \"indexedFunds\": [\n    {\n      \"id\": \"fund_789\",\n      \"name\": \"Global Index Fund\",\n      \"value\": 15000,\n      \"currency\": \"EUR\",\n      \"performance\": 7.2\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Financial products from external MI service"
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "Get Swagger Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rootUrl}}/api/docs",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"docs"
							]
						},
						"description": "Access the interactive Swagger API documentation"
					}
				}
			],
			"description": "API documentation and exploration"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "rootUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}