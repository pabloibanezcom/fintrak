{
	"info": {
		"_postman_id": "fintrak-api-collection",
		"name": "Fintrak API",
		"description": "Complete API collection for Fintrak financial tracking application including authentication, expense management, and product endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "fintrak"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/auth/register",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/auth/register",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"60d0fe4f5311236168a109ca\",\n  \"email\": \"{{user}}\"\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/auth/login",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login user and receive JWT token (automatically saved to environment)"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/auth/login",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"id\": \"60d0fe4f5311236168a109ca\",\n  \"email\": \"{{user}}\"\n}"
						}
					]
				}
			],
			"description": "User authentication endpoints for registration and login"
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "Get All Expenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						},
						"description": "Retrieve all expenses for the authenticated user"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"_id\": \"60d0fe4f5311236168a109cb\",\n    \"title\": \"Grocery Shopping\",\n    \"amount\": 85.50,\n    \"category\": \"food\",\n    \"date\": \"2024-01-15T00:00:00.000Z\",\n    \"description\": \"Weekly groceries\",\n    \"userId\": \"60d0fe4f5311236168a109ca\",\n    \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n    \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get Expense by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Retrieve a specific expense by ID"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Create Expense",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"expense_id\", jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/expenses",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						},
						"description": "Create a new expense (automatically saves expense ID to environment)"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/expenses",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Grocery Shopping\",\n  \"amount\": 85.50,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Update Expense",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"description\": \"Weekly groceries with extra items\"\n}"
						},
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Update an existing expense"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"description\": \"Weekly groceries with extra items\"\n}"
								},
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"60d0fe4f5311236168a109cb\",\n  \"title\": \"Updated Grocery Shopping\",\n  \"amount\": 95.75,\n  \"category\": \"food\",\n  \"date\": \"2024-01-15T00:00:00.000Z\",\n  \"description\": \"Weekly groceries with extra items\",\n  \"userId\": \"60d0fe4f5311236168a109ca\",\n  \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n  \"updatedAt\": \"2024-01-15T10:05:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Delete Expense",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/expenses/{{expense_id}}",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expense_id}}"
							]
						},
						"description": "Delete an existing expense"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/expenses/60d0fe4f5311236168a109cb",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"expenses",
										"60d0fe4f5311236168a109cb"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Expense deleted successfully\"\n}"
						}
					]
				}
			],
			"description": "Complete CRUD operations for expense management"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get User Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{rootUrl}}/api/products",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Retrieve all financial products (deposits, cash accounts, indexed funds) for the authenticated user from the MI service"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{rootUrl}}/api/products",
									"host": [
										"{{rootUrl}}"
									],
									"path": [
										"api",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deposits\": [\n    {\n      \"id\": \"dep_123\",\n      \"amount\": 10000,\n      \"currency\": \"EUR\",\n      \"interestRate\": 2.5,\n      \"maturityDate\": \"2025-12-31\"\n    }\n  ],\n  \"cashAccounts\": [\n    {\n      \"id\": \"acc_456\",\n      \"balance\": 5000,\n      \"currency\": \"EUR\",\n      \"accountType\": \"CHECKING\"\n    }\n  ],\n  \"indexedFunds\": [\n    {\n      \"id\": \"fund_789\",\n      \"name\": \"Global Index Fund\",\n      \"value\": 15000,\n      \"currency\": \"EUR\",\n      \"performance\": 7.2\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Financial products from external MI service"
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "Get Swagger Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rootUrl}}/api/docs",
							"host": [
								"{{rootUrl}}"
							],
							"path": [
								"api",
								"docs"
							]
						},
						"description": "Access the interactive Swagger API documentation"
					}
				}
			],
			"description": "API documentation and exploration"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "rootUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}